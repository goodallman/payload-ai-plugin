{"version":3,"sources":["../../../src/providers/InstructionsProvider/useInstructions.ts"],"sourcesContent":["import { useContext, useEffect, useState } from 'react'\r\n\r\nimport { handlebarsHelpers, handlebarsHelpersMap } from '../../libraries/handlebars/helpersMap.js'\r\nimport { InstructionsContext } from './InstructionsProvider.js'\r\n\r\nexport const useInstructions = (\r\n  update: {\r\n    schemaPath?: unknown\r\n  } = {},\r\n) => {\r\n  const context = useContext(InstructionsContext)\r\n\r\n  //Fields are used for autocompletion in PromptTextareaField\r\n  const fields = Object.keys(context.instructions || {}).map((key) => {\r\n    return key.split('.').slice(1).join('.')\r\n  })\r\n\r\n  const promptEditorSuggestions = [...fields].reduce((acc, f) => {\r\n    const fieldKey = Object.keys(context.instructions).find((k) => k.endsWith(f))\r\n    const fieldInfo = context.instructions[fieldKey]\r\n\r\n    // Currently, Upload fields are excluded from suggestions\r\n    if (fieldInfo.fieldType === 'upload') {\r\n      return acc\r\n    }\r\n\r\n    const helpers = handlebarsHelpers.filter(\r\n      (h) => handlebarsHelpersMap[h]?.field === fieldInfo.fieldType,\r\n    )\r\n\r\n    if (helpers.length) {\r\n      for (const helper of helpers) {\r\n        acc.push(helper + ` ${f}`)\r\n      }\r\n      return acc\r\n    }\r\n\r\n    acc.push(f)\r\n    return acc\r\n  }, [])\r\n\r\n  const [schemaPath, setSchemaPath] = useState(update.schemaPath as string)\r\n\r\n  useEffect(() => {\r\n    if(update.schemaPath !== schemaPath) {\r\n      setSchemaPath(update.schemaPath as string)\r\n    }\r\n  }, [schemaPath, update])\r\n\r\n  return {\r\n    ...context,\r\n    ...(context.instructions[schemaPath] || {}),\r\n    fields,\r\n    map: context.instructions,\r\n    promptEditorSuggestions,\r\n  }\r\n}\r\n"],"names":["useContext","useEffect","useState","handlebarsHelpers","handlebarsHelpersMap","InstructionsContext","useInstructions","update","context","fields","Object","keys","instructions","map","key","split","slice","join","promptEditorSuggestions","reduce","acc","f","fieldKey","find","k","endsWith","fieldInfo","fieldType","helpers","filter","h","field","length","helper","push","schemaPath","setSchemaPath"],"mappings":"AAAA,SAASA,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,QAAO;AAEvD,SAASC,iBAAiB,EAAEC,oBAAoB,QAAQ,2CAA0C;AAClG,SAASC,mBAAmB,QAAQ,4BAA2B;AAE/D,OAAO,MAAMC,kBAAkB,CAC7BC,SAEI,CAAC,CAAC;IAEN,MAAMC,UAAUR,WAAWK;IAE3B,2DAA2D;IAC3D,MAAMI,SAASC,OAAOC,IAAI,CAACH,QAAQI,YAAY,IAAI,CAAC,GAAGC,GAAG,CAAC,CAACC;QAC1D,OAAOA,IAAIC,KAAK,CAAC,KAAKC,KAAK,CAAC,GAAGC,IAAI,CAAC;IACtC;IAEA,MAAMC,0BAA0B;WAAIT;KAAO,CAACU,MAAM,CAAC,CAACC,KAAKC;QACvD,MAAMC,WAAWZ,OAAOC,IAAI,CAACH,QAAQI,YAAY,EAAEW,IAAI,CAAC,CAACC,IAAMA,EAAEC,QAAQ,CAACJ;QAC1E,MAAMK,YAAYlB,QAAQI,YAAY,CAACU,SAAS;QAEhD,yDAAyD;QACzD,IAAII,UAAUC,SAAS,KAAK,UAAU;YACpC,OAAOP;QACT;QAEA,MAAMQ,UAAUzB,kBAAkB0B,MAAM,CACtC,CAACC,IAAM1B,oBAAoB,CAAC0B,EAAE,EAAEC,UAAUL,UAAUC,SAAS;QAG/D,IAAIC,QAAQI,MAAM,EAAE;YAClB,KAAK,MAAMC,UAAUL,QAAS;gBAC5BR,IAAIc,IAAI,CAACD,SAAS,CAAC,CAAC,EAAEZ,EAAE,CAAC;YAC3B;YACA,OAAOD;QACT;QAEAA,IAAIc,IAAI,CAACb;QACT,OAAOD;IACT,GAAG,EAAE;IAEL,MAAM,CAACe,YAAYC,cAAc,GAAGlC,SAASK,OAAO4B,UAAU;IAE9DlC,UAAU;QACR,IAAGM,OAAO4B,UAAU,KAAKA,YAAY;YACnCC,cAAc7B,OAAO4B,UAAU;QACjC;IACF,GAAG;QAACA;QAAY5B;KAAO;IAEvB,OAAO;QACL,GAAGC,OAAO;QACV,GAAIA,QAAQI,YAAY,CAACuB,WAAW,IAAI,CAAC,CAAC;QAC1C1B;QACAI,KAAKL,QAAQI,YAAY;QACzBM;IACF;AACF,EAAC"}