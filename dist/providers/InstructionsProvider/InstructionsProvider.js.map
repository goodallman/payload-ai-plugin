{"version":3,"sources":["../../../src/providers/InstructionsProvider/InstructionsProvider.tsx"],"sourcesContent":["'use client'\r\n\r\nimport type { Field } from 'payload'\r\n\r\nimport { useAuth, useConfig } from '@payloadcms/ui'\r\nimport React, { createContext, useEffect, useState } from 'react'\r\n\r\nimport { PLUGIN_FETCH_FIELDS_ENDPOINT } from '../../defaults.js'\r\n\r\nconst initialContext: {\r\n  field?: Field\r\n  instructions: Record<string, any>\r\n  isConfigAllowed: boolean\r\n  path?: string\r\n  schemaPath?: unknown\r\n} = {\r\n  field: undefined,\r\n  instructions: undefined,\r\n  isConfigAllowed: true,\r\n  path: '',\r\n  schemaPath: '',\r\n}\r\n\r\nexport const InstructionsContext = createContext(initialContext)\r\n\r\nexport const InstructionsProvider: React.FC = ({ children }: { children: React.ReactNode }) => {\r\n  const [instructions, setInstructionsState] = useState({})\r\n  const [isConfigAllowed, setIsConfigAllowed] = useState(false)\r\n  const {\r\n    user\r\n  } = useAuth();\r\n\r\n  const { config } = useConfig()\r\n  const {\r\n    routes: { api },\r\n    serverURL,\r\n  } = config\r\n\r\n  // This is here because each field have separate instructions and\r\n  // their ID is needed to edit them for Drawer\r\n  useEffect(() => {\r\n    fetch(`${serverURL}${api}${PLUGIN_FETCH_FIELDS_ENDPOINT}`)\r\n      .then(async (res) => {\r\n        await res.json().then((data) => {\r\n          setIsConfigAllowed(data?.isConfigAllowed)\r\n          setInstructionsState(data?.fields)\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        console.error('InstructionsProvider:', err)\r\n      })\r\n  }, [user])\r\n\r\n  return (\r\n    <InstructionsContext.Provider value={{ instructions, isConfigAllowed }}>{children}</InstructionsContext.Provider>\r\n  )\r\n}\r\n"],"names":["useAuth","useConfig","React","createContext","useEffect","useState","PLUGIN_FETCH_FIELDS_ENDPOINT","initialContext","field","undefined","instructions","isConfigAllowed","path","schemaPath","InstructionsContext","InstructionsProvider","children","setInstructionsState","setIsConfigAllowed","user","config","routes","api","serverURL","fetch","then","res","json","data","fields","catch","err","console","error","Provider","value"],"mappings":"AAAA;;AAIA,SAASA,OAAO,EAAEC,SAAS,QAAQ,iBAAgB;AACnD,OAAOC,SAASC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,QAAO;AAEjE,SAASC,4BAA4B,QAAQ,oBAAmB;AAEhE,MAAMC,iBAMF;IACFC,OAAOC;IACPC,cAAcD;IACdE,iBAAiB;IACjBC,MAAM;IACNC,YAAY;AACd;AAEA,OAAO,MAAMC,oCAAsBX,cAAcI,gBAAe;AAEhE,OAAO,MAAMQ,uBAAiC,CAAC,EAAEC,QAAQ,EAAiC;IACxF,MAAM,CAACN,cAAcO,qBAAqB,GAAGZ,SAAS,CAAC;IACvD,MAAM,CAACM,iBAAiBO,mBAAmB,GAAGb,SAAS;IACvD,MAAM,EACJc,IAAI,EACL,GAAGnB;IAEJ,MAAM,EAAEoB,MAAM,EAAE,GAAGnB;IACnB,MAAM,EACJoB,QAAQ,EAAEC,GAAG,EAAE,EACfC,SAAS,EACV,GAAGH;IAEJ,iEAAiE;IACjE,6CAA6C;IAC7ChB,UAAU;QACRoB,MAAM,CAAC,EAAED,UAAU,EAAED,IAAI,EAAEhB,6BAA6B,CAAC,EACtDmB,IAAI,CAAC,OAAOC;YACX,MAAMA,IAAIC,IAAI,GAAGF,IAAI,CAAC,CAACG;gBACrBV,mBAAmBU,MAAMjB;gBACzBM,qBAAqBW,MAAMC;YAC7B;QACF,GACCC,KAAK,CAAC,CAACC;YACNC,QAAQC,KAAK,CAAC,yBAAyBF;QACzC;IACJ,GAAG;QAACZ;KAAK;IAET,qBACE,KAACL,oBAAoBoB,QAAQ;QAACC,OAAO;YAAEzB;YAAcC;QAAgB;kBAAIK;;AAE7E,EAAC"}