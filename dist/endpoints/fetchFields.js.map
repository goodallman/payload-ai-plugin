{"version":3,"sources":["../../src/endpoints/fetchFields.ts"],"sourcesContent":["import type { Endpoint, PayloadRequest } from 'payload'\r\n\r\nimport type { PluginConfigAccess } from '../types.js'\r\n\r\nimport { PLUGIN_FETCH_FIELDS_ENDPOINT, PLUGIN_INSTRUCTIONS_TABLE } from '../defaults.js'\r\n\r\nexport const fetchFields: (access: PluginConfigAccess) => Endpoint = (access) => {\r\n  return {\r\n    handler: async (req: PayloadRequest) => {\r\n      const { docs = [] } = await req.payload.find({\r\n        collection: PLUGIN_INSTRUCTIONS_TABLE,\r\n        pagination: false,\r\n      })\r\n\r\n      let isConfigAllowed = false\r\n\r\n      /* if (access?.settings) {\r\n        try {\r\n          isConfigAllowed = await access.settings({ req })\r\n        } catch (e) {\r\n          req.payload.logger.error('Please check your \"access.settings\" for request:', req)\r\n        }\r\n      } */\r\n\r\n      const fieldMap = {}\r\n      docs.forEach((doc) => {\r\n        fieldMap[doc['schema-path']] = {\r\n          id: doc.id,\r\n          fieldType: doc['field-type'],\r\n        }\r\n      })\r\n\r\n      return Response.json({\r\n        fields: fieldMap,\r\n        isConfigAllowed,\r\n      })\r\n    },\r\n    method: 'get',\r\n    path: PLUGIN_FETCH_FIELDS_ENDPOINT,\r\n  }\r\n}\r\n"],"names":["PLUGIN_FETCH_FIELDS_ENDPOINT","PLUGIN_INSTRUCTIONS_TABLE","fetchFields","access","handler","req","docs","payload","find","collection","pagination","isConfigAllowed","fieldMap","forEach","doc","id","fieldType","Response","json","fields","method","path"],"mappings":"AAIA,SAASA,4BAA4B,EAAEC,yBAAyB,QAAQ,iBAAgB;AAExF,OAAO,MAAMC,cAAwD,CAACC;IACpE,OAAO;QACLC,SAAS,OAAOC;YACd,MAAM,EAAEC,OAAO,EAAE,EAAE,GAAG,MAAMD,IAAIE,OAAO,CAACC,IAAI,CAAC;gBAC3CC,YAAYR;gBACZS,YAAY;YACd;YAEA,IAAIC,kBAAkB;YAEtB;;;;;;QAME,GAEF,MAAMC,WAAW,CAAC;YAClBN,KAAKO,OAAO,CAAC,CAACC;gBACZF,QAAQ,CAACE,GAAG,CAAC,cAAc,CAAC,GAAG;oBAC7BC,IAAID,IAAIC,EAAE;oBACVC,WAAWF,GAAG,CAAC,aAAa;gBAC9B;YACF;YAEA,OAAOG,SAASC,IAAI,CAAC;gBACnBC,QAAQP;gBACRD;YACF;QACF;QACAS,QAAQ;QACRC,MAAMrB;IACR;AACF,EAAC"}