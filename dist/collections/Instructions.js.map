{"version":3,"sources":["../../src/collections/Instructions.ts"],"sourcesContent":["import type { CollectionConfig, GroupField } from 'payload'\r\nimport type { PluginConfig } from 'src/types.js'\r\n\r\nimport { PLUGIN_INSTRUCTIONS_TABLE } from '../defaults.js'\r\nimport { getGenerationModels } from '../utilities/getGenerationModels.js'\r\n\r\nconst groupSettings = (pluginConfig: PluginConfig) =>\r\n  getGenerationModels(pluginConfig).reduce((fields, model) => {\r\n    if (model.settings) {\r\n      fields.push(model.settings)\r\n    }\r\n    return fields\r\n  }, [] as GroupField[])\r\n\r\nconst modelOptions = (pluginConfig: PluginConfig) =>\r\n  getGenerationModels(pluginConfig).map((model) => {\r\n    return {\r\n      fields: model.fields,\r\n      label: model.name,\r\n      value: model.id,\r\n    }\r\n  })\r\n\r\nconst defaultAccessConfig = {\r\n  create: () => true,\r\n  read: () => true,\r\n  update: () => true,\r\n}\r\n\r\nconst defaultAdminConfig = {\r\n  group: 'Plugins',\r\n  hidden: true,\r\n}\r\n\r\nexport const instructionsCollection = (\r\n  pluginConfig: PluginConfig,\r\n  options?: Partial<CollectionConfig>,\r\n) =>\r\n  <CollectionConfig>{\r\n    slug: PLUGIN_INSTRUCTIONS_TABLE,\r\n    access: {\r\n      ...defaultAccessConfig,\r\n      ...options?.access,\r\n    },\r\n    admin: {\r\n      ...defaultAdminConfig,\r\n      ...options?.admin,\r\n      group: 'Plugins',\r\n    },\r\n    fields: [\r\n      {\r\n        name: 'schema-path',\r\n        type: 'text',\r\n        admin: {\r\n          description: \"Please don’t change this unless you're sure of what you're doing\",\r\n        },\r\n        unique: true,\r\n      },\r\n      {\r\n        name: 'field-type',\r\n        type: 'select',\r\n        admin: {\r\n          description: \"Please don’t change this unless you're sure of what you're doing\",\r\n        },\r\n        defaultValue: 'text',\r\n        label: 'Field type',\r\n        options: [\r\n          {\r\n            label: 'text',\r\n            value: 'text',\r\n          },\r\n          {\r\n            label: 'textarea',\r\n            value: 'textarea',\r\n          },\r\n          {\r\n            label: 'upload',\r\n            value: 'upload',\r\n          },\r\n          {\r\n            label: 'richText',\r\n            value: 'richText',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        name: 'relation-to',\r\n        type: 'text',\r\n        admin: {\r\n          condition: (_, current) => {\r\n            return current['field-type'] === 'upload'\r\n          },\r\n        },\r\n        label: 'Relation to',\r\n      },\r\n      {\r\n        name: 'model-id',\r\n        type: 'select',\r\n        admin: {\r\n          components: {\r\n            Field: {\r\n              clientProps: {\r\n                filterByField: 'field-type',\r\n                options: modelOptions(pluginConfig),\r\n              },\r\n              path: '@ai-stack/payloadcms/fields#SelectField',\r\n            },\r\n          },\r\n        },\r\n        label: 'Model',\r\n        options: modelOptions(pluginConfig).map((option) => {\r\n          return {\r\n            label: option.label,\r\n            value: option.value,\r\n          }\r\n        }),\r\n      },\r\n      {\r\n        id: 'ai-prompts-tabs',\r\n        type: 'tabs',\r\n        tabs: [\r\n          {\r\n            description:\r\n              'The Prompt field allows you to define dynamic templates using placeholders (e.g., {{ fieldName }}) to customize output based on your data fields.',\r\n            fields: [\r\n              {\r\n                name: 'prompt',\r\n                type: 'textarea',\r\n                admin: {\r\n                  components: {\r\n                    Field: '@ai-stack/payloadcms/fields#PromptEditorField',\r\n                  },\r\n                  description: \"Click 'Compose' to run this custom prompt and generate content\",\r\n                },\r\n                label: '',\r\n              },\r\n            ],\r\n            label: 'Prompt',\r\n          },\r\n          {\r\n            admin: {\r\n              condition: (_, current) => {\r\n                return current['field-type'] === 'richText'\r\n              },\r\n            },\r\n            description: '',\r\n            fields: [\r\n              {\r\n                name: 'system',\r\n                type: 'textarea',\r\n                defaultValue: `INSTRUCTIONS:\r\nYou are a highly skilled and professional blog writer,\r\nrenowned for crafting engaging and well-organized articles.\r\nWhen given a title, you meticulously create blogs that are not only\r\ninformative and accurate but also captivating and beautifully structured.`,\r\n                label: '',\r\n              },\r\n            ],\r\n            label: 'System prompt',\r\n          },\r\n          {\r\n            admin: {\r\n              condition: (_, current) => {\r\n                return current['field-type'] === 'richText'\r\n              },\r\n            },\r\n            description: '',\r\n            fields: [\r\n              {\r\n                /** TODO:\r\n                 *  - Layouts can be saved in as an array\r\n                 *  - User can add their own layout to collections and use it later for generate specific rich text\r\n                 *  - User can select previously added layout\r\n                 */\r\n                name: 'layout',\r\n                type: 'textarea',\r\n                admin: {\r\n                  condition: (_, current) => {\r\n                    return current['field-type'] === 'richText'\r\n                  },\r\n                },\r\n                defaultValue: `[paragraph] - Write a concise introduction (2-3 sentences) that outlines the main topic.\r\n[horizontalrule] - Insert a horizontal rule to separate the introduction from the main content.\r\n[list] - Create a list with 3-5 items. Each list item should contain:\r\n   a. [heading] - A brief, descriptive heading (up to 5 words)\r\n   b. [paragraph] - A short explanation or elaboration (1-2 sentences)\r\n[horizontalrule] - Insert another horizontal rule to separate the main content from the conclusion.\r\n[paragraph] - Compose a brief conclusion (2-3 sentences) summarizing the key points.\r\n[quote] - Include a relevant quote from a famous person, directly related to the topic. Format: \"Quote text.\" - Author Name`,\r\n                label: '',\r\n              },\r\n            ],\r\n            label: 'Layout',\r\n          },\r\n        ],\r\n      },\r\n      ...groupSettings(pluginConfig),\r\n    ],\r\n    labels: {\r\n      plural: 'Compose Settings',\r\n      singular: 'Compose Setting',\r\n    },\r\n  }\r\n"],"names":["PLUGIN_INSTRUCTIONS_TABLE","getGenerationModels","groupSettings","pluginConfig","reduce","fields","model","settings","push","modelOptions","map","label","name","value","id","defaultAccessConfig","create","read","update","defaultAdminConfig","group","hidden","instructionsCollection","options","slug","access","admin","type","description","unique","defaultValue","condition","_","current","components","Field","clientProps","filterByField","path","option","tabs","labels","plural","singular"],"mappings":"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"}