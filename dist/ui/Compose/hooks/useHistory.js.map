{"version":3,"sources":["../../../../src/ui/Compose/hooks/useHistory.ts"],"sourcesContent":["'use client'\r\n\r\nimport { useDocumentInfo, useField } from '@payloadcms/ui'\r\nimport { useCallback, useEffect } from 'react'\r\n\r\nimport { PLUGIN_NAME } from '../../../defaults.js'\r\nimport { useFieldProps } from '../../../providers/FieldProvider/useFieldProps.js'\r\n\r\nconst STORAGE_KEY = `${PLUGIN_NAME}-fields-history`\r\n\r\ninterface HistoryState {\r\n  [path: string]: {\r\n    currentIndex: number\r\n    history: any[]\r\n  }\r\n}\r\n\r\nexport const useHistory = () => {\r\n  const { id } = useDocumentInfo()\r\n  const { path: pathFromContext, schemaPath } = useFieldProps()\r\n  const { value: currentFieldValue } = useField<string>({\r\n    path: pathFromContext,\r\n  })\r\n\r\n  const fieldKey = `${id}.${schemaPath}`\r\n\r\n  const getLatestHistory = useCallback((): HistoryState => {\r\n    try {\r\n      // This condition is applied, as it was somehow triggering on server side\r\n      if (typeof localStorage !== 'undefined') {\r\n        return JSON.parse(localStorage.getItem(STORAGE_KEY) || '{}')\r\n      }\r\n      return {}\r\n    } catch (e) {\r\n      console.error('Error parsing history:', e)\r\n      return {}\r\n    }\r\n  }, [])\r\n\r\n  const saveToLocalStorage = useCallback((newGlobalHistory: HistoryState) => {\r\n    if (typeof localStorage !== 'undefined') {\r\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(newGlobalHistory))\r\n    }\r\n  }, [])\r\n\r\n  // Clear previous history\r\n  const clearHistory = useCallback(() => {\r\n    const latestHistory = { ...getLatestHistory() }\r\n    Object.keys(latestHistory).forEach((k) => {\r\n      if (!k.startsWith(id?.toString())) {\r\n        delete latestHistory[k]\r\n      }\r\n    })\r\n    saveToLocalStorage(latestHistory)\r\n  }, [id, fieldKey, getLatestHistory, saveToLocalStorage])\r\n\r\n  useEffect(() => {\r\n    // This is applied to clear out the document history which is not currently in use\r\n    clearHistory()\r\n\r\n    const latestHistory = getLatestHistory()\r\n    const { currentIndex, history } = latestHistory[fieldKey] || {\r\n      currentIndex: -1,\r\n      history: [],\r\n    }\r\n\r\n    let newIndex = currentIndex\r\n    if (currentIndex == -1) {\r\n      newIndex = 0\r\n      if (currentFieldValue) {\r\n        history[newIndex] = currentFieldValue\r\n      }\r\n    }\r\n\r\n    const newGlobalHistory = {\r\n      ...latestHistory,\r\n      [fieldKey]: { currentIndex: newIndex, history },\r\n    }\r\n\r\n    saveToLocalStorage(newGlobalHistory)\r\n  }, [fieldKey])\r\n\r\n  const set = useCallback(\r\n    (data: any) => {\r\n      const latestHistory = getLatestHistory()\r\n      const { currentIndex, history } = latestHistory[fieldKey] || {\r\n        currentIndex: -1,\r\n        history: [],\r\n      }\r\n      const newHistory = [...history.slice(0, currentIndex + 1), data]\r\n      const newGlobalHistory = {\r\n        ...latestHistory,\r\n        [fieldKey]: { currentIndex: newHistory.length - 1, history: newHistory },\r\n      }\r\n      saveToLocalStorage(newGlobalHistory)\r\n      return data\r\n    },\r\n    [fieldKey, getLatestHistory, saveToLocalStorage],\r\n  )\r\n\r\n  const undo = useCallback(() => {\r\n    const latestHistory = getLatestHistory()\r\n    const { currentIndex, history } = latestHistory[fieldKey] || { currentIndex: -1, history: [] }\r\n    if (currentIndex > 0) {\r\n      const newIndex = currentIndex - 1\r\n      const newValue = history[newIndex]\r\n      const newGlobalHistory = {\r\n        ...latestHistory,\r\n        [fieldKey]: { currentIndex: newIndex, history },\r\n      }\r\n      saveToLocalStorage(newGlobalHistory)\r\n      return newValue\r\n    }\r\n    return undefined\r\n  }, [fieldKey, getLatestHistory, saveToLocalStorage])\r\n\r\n  const redo = useCallback(() => {\r\n    const latestHistory = getLatestHistory()\r\n    const { currentIndex, history } = latestHistory[fieldKey] || { currentIndex: -1, history: [] }\r\n    if (currentIndex < history.length - 1) {\r\n      const newIndex = currentIndex + 1\r\n      const newValue = history[newIndex]\r\n      const newGlobalHistory = {\r\n        ...latestHistory,\r\n        [fieldKey]: { currentIndex: newIndex, history },\r\n      }\r\n      saveToLocalStorage(newGlobalHistory)\r\n      return newValue\r\n    }\r\n    return undefined\r\n  }, [fieldKey, getLatestHistory, saveToLocalStorage])\r\n\r\n  const getLatestFieldHistory = useCallback(() => {\r\n    const latestHistory = getLatestHistory()\r\n    return latestHistory[fieldKey] || { currentIndex: -1, history: [] }\r\n  }, [getLatestHistory, fieldKey])\r\n\r\n  const fieldHistory = getLatestFieldHistory()\r\n\r\n  const canUndo = fieldHistory.currentIndex > 0\r\n  const canRedo = fieldHistory.currentIndex < fieldHistory.history.length - 1\r\n  const currentValue = fieldHistory.history[fieldHistory.currentIndex]\r\n\r\n  return {\r\n    canRedo,\r\n    canUndo,\r\n    currentValue,\r\n    redo,\r\n    set,\r\n    undo,\r\n  }\r\n}\r\n"],"names":["useDocumentInfo","useField","useCallback","useEffect","PLUGIN_NAME","useFieldProps","STORAGE_KEY","useHistory","id","path","pathFromContext","schemaPath","value","currentFieldValue","fieldKey","getLatestHistory","localStorage","JSON","parse","getItem","e","console","error","saveToLocalStorage","newGlobalHistory","setItem","stringify","clearHistory","latestHistory","Object","keys","forEach","k","startsWith","toString","currentIndex","history","newIndex","set","data","newHistory","slice","length","undo","newValue","undefined","redo","getLatestFieldHistory","fieldHistory","canUndo","canRedo","currentValue"],"mappings":"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"}