{"version":3,"sources":["../../src/utilities/getFieldBySchemaPath.ts"],"sourcesContent":["import type { ClientCollectionConfig, CollectionConfig, Field } from 'payload'\r\n\r\nexport const getFieldBySchemaPath = (\r\n  collectionConfig: ClientCollectionConfig | CollectionConfig,\r\n  schemaPath: string, // e.g., \"posts.content\"\r\n): Field | null => {\r\n  const pathParts = schemaPath.split('.')\r\n  const targetFieldName = pathParts[pathParts.length - 1]\r\n\r\n  const findField = (fields, remainingPath: string[]): Field | null => {\r\n    for (const field of fields) {\r\n      if (remainingPath.length === 1 && field.name === targetFieldName) {\r\n        return field\r\n      }\r\n\r\n      if (field.type === 'group' && field.fields) {\r\n        const result = findField(field.fields, remainingPath.slice(1))\r\n        if (result) return result\r\n      }\r\n\r\n      if (field.type === 'array' && field.fields) {\r\n        const result = findField(field.fields, remainingPath.slice(1))\r\n        if (result) return result\r\n      }\r\n\r\n      if (field.type === 'tabs') {\r\n        for (const tab of field.tabs) {\r\n          const result = findField(tab.fields, remainingPath)\r\n          if (result) return result\r\n        }\r\n      }\r\n\r\n      if (field.type === 'blocks') {\r\n        for (const block of field.blocks) {\r\n          if (block.slug === remainingPath[0]) {\r\n            const result = findField(block.fields, remainingPath.slice(1))\r\n            if (result) return result\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  return findField(collectionConfig.fields, pathParts.slice(1))\r\n}\r\n"],"names":["getFieldBySchemaPath","collectionConfig","schemaPath","pathParts","split","targetFieldName","length","findField","fields","remainingPath","field","name","type","result","slice","tab","tabs","block","blocks","slug"],"mappings":"AAEA,OAAO,MAAMA,uBAAuB,CAClCC,kBACAC;IAEA,MAAMC,YAAYD,WAAWE,KAAK,CAAC;IACnC,MAAMC,kBAAkBF,SAAS,CAACA,UAAUG,MAAM,GAAG,EAAE;IAEvD,MAAMC,YAAY,CAACC,QAAQC;QACzB,KAAK,MAAMC,SAASF,OAAQ;YAC1B,IAAIC,cAAcH,MAAM,KAAK,KAAKI,MAAMC,IAAI,KAAKN,iBAAiB;gBAChE,OAAOK;YACT;YAEA,IAAIA,MAAME,IAAI,KAAK,WAAWF,MAAMF,MAAM,EAAE;gBAC1C,MAAMK,SAASN,UAAUG,MAAMF,MAAM,EAAEC,cAAcK,KAAK,CAAC;gBAC3D,IAAID,QAAQ,OAAOA;YACrB;YAEA,IAAIH,MAAME,IAAI,KAAK,WAAWF,MAAMF,MAAM,EAAE;gBAC1C,MAAMK,SAASN,UAAUG,MAAMF,MAAM,EAAEC,cAAcK,KAAK,CAAC;gBAC3D,IAAID,QAAQ,OAAOA;YACrB;YAEA,IAAIH,MAAME,IAAI,KAAK,QAAQ;gBACzB,KAAK,MAAMG,OAAOL,MAAMM,IAAI,CAAE;oBAC5B,MAAMH,SAASN,UAAUQ,IAAIP,MAAM,EAAEC;oBACrC,IAAII,QAAQ,OAAOA;gBACrB;YACF;YAEA,IAAIH,MAAME,IAAI,KAAK,UAAU;gBAC3B,KAAK,MAAMK,SAASP,MAAMQ,MAAM,CAAE;oBAChC,IAAID,MAAME,IAAI,KAAKV,aAAa,CAAC,EAAE,EAAE;wBACnC,MAAMI,SAASN,UAAUU,MAAMT,MAAM,EAAEC,cAAcK,KAAK,CAAC;wBAC3D,IAAID,QAAQ,OAAOA;oBACrB;gBACF;YACF;QACF;QAEA,OAAO;IACT;IAEA,OAAON,UAAUN,iBAAiBO,MAAM,EAAEL,UAAUW,KAAK,CAAC;AAC5D,EAAC"}