{"version":3,"sources":["../../../src/fields/SelectField/SelectField.tsx"],"sourcesContent":["'use client'\r\n\r\nimport type { OptionObject, SelectFieldClientProps } from 'payload'\r\n\r\nimport { SelectInput, useField } from '@payloadcms/ui'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\n// Use to filter model options in settings based on field types\r\nexport const SelectField = (\r\n  props: {\r\n    filterByField: string\r\n    options: { fields: string[]; label: string; value: string }[]\r\n    path: string\r\n  } & SelectFieldClientProps,\r\n) => {\r\n  const { field, filterByField, options, path } = props\r\n  const { value: relatedField } = useField<string>({\r\n    path: filterByField,\r\n  })\r\n\r\n  const [filterOptions, setFilterOptions] = useState<OptionObject[]>([])\r\n\r\n  useEffect(() => {\r\n    if (!Array.isArray(options)) return\r\n\r\n    const opts = options.filter((option) => {\r\n      if (!relatedField || !option.fields) return true\r\n\r\n      if (Array.isArray(option.fields)) {\r\n        return option.fields.includes(relatedField)\r\n      }\r\n    })\r\n    setFilterOptions(opts)\r\n  }, [relatedField, options])\r\n\r\n  const { setValue, value: selectValue } = useField<string>({ path })\r\n\r\n  return (\r\n    <SelectInput\r\n      label={field.label}\r\n      name={path}\r\n      onChange={(e: OptionObject) => {\r\n        setValue(e.value)\r\n      }}\r\n      options={filterOptions}\r\n      path={path}\r\n      value={selectValue}\r\n    />\r\n  )\r\n}\r\n"],"names":["SelectInput","useField","React","useEffect","useState","SelectField","props","field","filterByField","options","path","value","relatedField","filterOptions","setFilterOptions","Array","isArray","opts","filter","option","fields","includes","setValue","selectValue","label","name","onChange","e"],"mappings":"AAAA;;AAIA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,iBAAgB;AACtD,OAAOC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,QAAO;AAElD,+DAA+D;AAC/D,OAAO,MAAMC,cAAc,CACzBC;IAMA,MAAM,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,IAAI,EAAE,GAAGJ;IAChD,MAAM,EAAEK,OAAOC,YAAY,EAAE,GAAGX,SAAiB;QAC/CS,MAAMF;IACR;IAEA,MAAM,CAACK,eAAeC,iBAAiB,GAAGV,SAAyB,EAAE;IAErED,UAAU;QACR,IAAI,CAACY,MAAMC,OAAO,CAACP,UAAU;QAE7B,MAAMQ,OAAOR,QAAQS,MAAM,CAAC,CAACC;YAC3B,IAAI,CAACP,gBAAgB,CAACO,OAAOC,MAAM,EAAE,OAAO;YAE5C,IAAIL,MAAMC,OAAO,CAACG,OAAOC,MAAM,GAAG;gBAChC,OAAOD,OAAOC,MAAM,CAACC,QAAQ,CAACT;YAChC;QACF;QACAE,iBAAiBG;IACnB,GAAG;QAACL;QAAcH;KAAQ;IAE1B,MAAM,EAAEa,QAAQ,EAAEX,OAAOY,WAAW,EAAE,GAAGtB,SAAiB;QAAES;IAAK;IAEjE,qBACE,KAACV;QACCwB,OAAOjB,MAAMiB,KAAK;QAClBC,MAAMf;QACNgB,UAAU,CAACC;YACTL,SAASK,EAAEhB,KAAK;QAClB;QACAF,SAASI;QACTH,MAAMA;QACNC,OAAOY;;AAGb,EAAC"}